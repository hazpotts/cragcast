name: Deploy CragCast to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - "assets/**"
      - "components/**"
      - "composables/**"
      - "pages/**"
      - "plugins/**"
      - "public/**"
      - "server/**"
      - "utils/**"
      - "types/**"
      - "app.vue"
      - "app.config.ts"
      - "nuxt.config.*"
      - "package.json"
      - "pnpm-lock.yaml"
      - ".github/workflows/deploy-cloudflare.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable corepack (use pnpm from package.json)
        run: corepack enable

      - name: Setup PNPM cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: pnpm fetch
        run: pnpm fetch

      - name: Install dependencies (frozen, offline if possible)
        run: pnpm install --frozen-lockfile --prefer-offline

      # Build for Cloudflare Pages (Nitro cloudflare-pages preset)
      - name: Nuxt build
        env:
          NITRO_PRESET: cloudflare-pages
        run: pnpm run build

      - name: Show build output
        run: |
          echo "Repo root:" && pwd
          echo "Root contents:" && ls -la
          echo "--- .output ---" && ls -la .output || true
          echo "--- .output/public ---" && ls -la .output/public || true

      - name: Show Nuxt version
        run: |
          node -e "console.log('nuxt version:', require('nuxt/package.json').version)"

      - name: Locate _worker.js
        run: |
          echo "Searching for _worker.js in .output..."
          find .output -maxdepth 4 -name "_worker.js" -print || true

      - name: Select Pages deploy directory
        id: select_dir
        run: |
          if [ -d .output/public ]; then
            echo "DEPLOY_DIR=.output/public" >> $GITHUB_ENV
            echo "Using DEPLOY_DIR=.output/public"
          elif [ -d .output ]; then
            echo "DEPLOY_DIR=.output" >> $GITHUB_ENV
            echo "Using DEPLOY_DIR=.output"
          else
            echo "Build output not found" >&2
            exit 1
          fi


      # Deploy to Cloudflare Pages (SSR via Pages Functions generated by Nitro)
      - name: Deploy via Wrangler Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '4'
          command: pages deploy ${{ env.DEPLOY_DIR }} --project-name=cragcast --branch=main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
